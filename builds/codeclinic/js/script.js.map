{"version":3,"sources":["script.js"],"names":["$","mySound","myOscillator","myGain","myDistortion","originalYPos","originalFrequency","scaleFrequencies","appNode","document","querySelector","appWidth","offsetWidth","mouseXpos","window","clientX","mouseYpos","clientY","style","background","backgroundSize","length","contextClass","AudioContext","webkitAudioContext","makeDistortionCurve","amount","k","n_samples","curve","Float32Array","deg","Math","PI","i","x","abs","innerHTML","addEventListener","e","createOscillator","type","floor","frequency","value","start","createWaveShaper","oversample","createGain","gain","connect","destination","distanceY","stop","removeEventListener"],"mappings":"AAAAA,EAAE,YAAW;AACX;;AAEA,MAAIC,OAAJ;AAAA,MAAaC,YAAb;AAAA,MAA2BC,MAA3B;AAAA,MAAmCC,YAAnC;AAAA,MAAiDC,YAAjD;AAAA,MAA+DC,iBAA/D;AAAA,MACIC,mBAAmB,CAAC,GAAD,EAAM,MAAN,EAAc,MAAd,EAAsB,MAAtB,EAA8B,MAA9B,EAAsC,MAAtC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,MAAxD,EAAgE,MAAhE,EAAwE,MAAxE,EAAgF,MAAhF,EAAwF,MAAxF,EAAgG,GAAhG,EAAqG,GAArG,EAA0G,MAA1G,EAAkH,MAAlH,EAA0H,MAA1H,EAAkI,MAAlI,EAA0I,MAA1I,EAAkJ,MAAlJ,EAA0J,GAA1J,EAA+J,MAA/J,EAAuK,OAAvK,EAAgL,OAAhL,EAAyL,OAAzL,EAAkM,OAAlM,EAA2M,OAA3M,EAAoN,IAApN,CADvB;AAAA,MAEIC,UAAUC,SAASC,aAAT,CAAuB,MAAvB,CAFd;AAAA,MAGIC,WAAWH,QAAQI,WAHvB;AAAA,MAIIC,YAAYC,OAAOC,OAJvB;AAAA,MAKIC,YAAYF,OAAOG,OALvB;;AAOIT,UAAQU,KAAR,CAAcC,UAAd,GAA2B,iFAA3B;AACAX,UAAQU,KAAR,CAAcE,cAAd,GAAiCT,WAAWJ,iBAAiBc,MAA7B,GAAqC,CAAtC,GAA2C,SAA1E;;AAEA,MAAIC,eAAgBR,OAAOS,YAAP,IAAwBT,OAAOU,kBAAnD;;AAEA,WAASC,mBAAT,CAA6BC,MAA7B,EAAqC;AACnC,QAAIC,IAAI,OAAOD,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsC,EAA9C;AAAA,QACEE,YAAY,KADd;AAAA,QAEEC,QAAQ,IAAIC,YAAJ,CAAiBF,SAAjB,CAFV;AAAA,QAGEG,MAAMC,KAAKC,EAAL,GAAU,GAHlB;AAAA,QAIEC,IAAI,CAJN;AAAA,QAKEC,CALF;AAMA,WAAQD,IAAIN,SAAZ,EAAuB,EAAEM,CAAzB,EAA6B;AAC3BC,UAAID,IAAI,CAAJ,GAAQN,SAAR,GAAoB,CAAxB;AACAC,YAAMK,CAAN,IAAW,CAAE,IAAIP,CAAN,IAAYQ,CAAZ,GAAgB,EAAhB,GAAqBJ,GAArB,IAA6BC,KAAKC,EAAL,GAAUN,IAAIK,KAAKI,GAAL,CAASD,CAAT,CAA3C,CAAX;AACD;AACD,WAAON,KAAP;AACD;;AAGD,MAAIP,YAAJ,EAAkB;AAChBrB,cAAU,IAAIqB,YAAJ,EAAV;AACD,GAFD,MAEO;AACLb,aAASC,aAAT,CAAuB,MAAvB,EAA+B2B,SAA/B,GAA2C,+IAA3C;AACD;;AAED7B,UAAQ8B,gBAAR,CAAyB,WAAzB,EAAsC,UAASC,CAAT,EAAY;;AAEhD1B,gBAAY0B,EAAExB,OAAd;AACAC,gBAAYuB,EAAEtB,OAAd;AACAZ,mBAAeW,SAAf;;AAEAd,mBAAeD,QAAQuC,gBAAR,EAAf;AACAtC,iBAAauC,IAAb,GAAoB,MAApB,CAPgD,CAOpB;;AAE5BnC,wBAAoBC,iBAAiByB,KAAKU,KAAL,CAAY7B,YAAUF,QAAX,GAAuBJ,iBAAiBc,MAAnD,CAAjB,CAApB;;AAEAnB,iBAAayC,SAAb,CAAuBC,KAAvB,GAA+BtC,iBAA/B;AACAJ,iBAAa2C,KAAb;;AAEAzC,mBAAeH,QAAQ6C,gBAAR,EAAf;AACA1C,iBAAayB,KAAb,GAAqBJ,oBAAoB,GAApB,CAArB;AACArB,iBAAa2C,UAAb,GAA0B,IAA1B;;AAGA5C,aAASF,QAAQ+C,UAAR,EAAT;AACA7C,WAAO8C,IAAP,CAAYL,KAAZ,GAAoB,CAApB;;AAEA1C,iBAAagD,OAAb,CAAqB9C,YAArB;AACAA,iBAAa8C,OAAb,CAAqB/C,MAArB;AACAA,WAAO+C,OAAP,CAAejD,QAAQkD,WAAvB;;AAEA3C,YAAQ8B,gBAAR,CAAyB,WAAzB,EAAsC,UAASC,CAAT,EAAY;AAChD,UAAIa,YAAYb,EAAEtB,OAAF,GAAYZ,YAA5B;AACAQ,kBAAY0B,EAAExB,OAAd;AACAJ,iBAAWH,QAAQI,WAAnB;;AAEAT,aAAO8C,IAAP,CAAYL,KAAZ,GAAoB/B,YAAUF,QAA9B;AACAT,mBAAayC,SAAb,CAAuBC,KAAvB,GAA+BtC,oBAAoB8C,SAAnD;;AAEA5C,cAAQU,KAAR,CAAcE,cAAd,GAAiCT,WAAWJ,iBAAiBc,MAA7B,GAAqC,CAAtC,GAA2C,SAA1E;AAED,KAVD,EAUG,KAVH,EA1BgD,CAoCrC;AAEZ,GAtCD,EAsCG,KAtCH,EApCO,CA0EI;;AAEXb,UAAQ8B,gBAAR,CAAyB,SAAzB,EAAoC,YAAW;AAC7CpC,iBAAamD,IAAb;AACA7C,YAAQ8C,mBAAR,CAA4B,WAA5B,EAAyC,IAAzC;AACD,GAHD,EAGG,KAHH,EA5EO,CA+EI;AAEhB,CAjFD,E,CAiFI","file":"script.js","sourcesContent":["$(function() {\n  'use strict';\n\n  var mySound, myOscillator, myGain, myDistortion, originalYPos, originalFrequency,\n      scaleFrequencies = [110, 123.47, 130.81, 146.83, 164.81, 174.61, 196, 220, 246.94, 261.63, 293.66, 329.63, 349.23, 392, 440, 493.88, 523.25, 587.33, 659.25, 698.46, 783.99, 880, 987.77, 1046.50, 1174.66, 1318.51, 1396.91, 1567.98, 1760],\n      appNode = document.querySelector('.app'),\n      appWidth = appNode.offsetWidth,\n      mouseXpos = window.clientX,\n      mouseYpos = window.clientY;\n\n      appNode.style.background = 'repeating-linear-gradient(to right, #FDF6E4, #FDF6E4 50%, #F7EFD7 50%, #F7EFD7)';\n      appNode.style.backgroundSize = ((appWidth / scaleFrequencies.length)*2) + 'px 100%';\n\n      var contextClass = (window.AudioContext  || window.webkitAudioContext);\n\n      function makeDistortionCurve(amount) {\n        var k = typeof amount === 'number' ? amount : 50,\n          n_samples = 44100,\n          curve = new Float32Array(n_samples),\n          deg = Math.PI / 180,\n          i = 0,\n          x;\n        for ( ; i < n_samples; ++i ) {\n          x = i * 2 / n_samples - 1;\n          curve[i] = ( 3 + k ) * x * 20 * deg / ( Math.PI + k * Math.abs(x) );\n        }\n        return curve;\n      }\n\n\n      if (contextClass) {\n        mySound = new contextClass();\n      } else {\n        document.querySelector('.app').innerHTML = '<div class=\"container alert alert-danger\" role=\"alert\">Sorry, this app requires the Web Audio API, which your browser does not support.</div>';\n      }\n\n      appNode.addEventListener('mousedown', function(e) {\n\n        mouseXpos = e.clientX;\n        mouseYpos = e.clientY;\n        originalYPos = mouseYpos;\n\n        myOscillator = mySound.createOscillator();\n        myOscillator.type = 'sine'; // sine square sawtooth triangle\n\n        originalFrequency = scaleFrequencies[Math.floor((mouseXpos/appWidth) * scaleFrequencies.length)];\n\n        myOscillator.frequency.value = originalFrequency;\n        myOscillator.start();\n\n        myDistortion = mySound.createWaveShaper();\n        myDistortion.curve = makeDistortionCurve(400);\n        myDistortion.oversample = '4x';\n\n\n        myGain = mySound.createGain();\n        myGain.gain.value = 1;\n\n        myOscillator.connect(myDistortion);\n        myDistortion.connect(myGain);\n        myGain.connect(mySound.destination);\n\n        appNode.addEventListener('mousemove', function(e) {\n          var distanceY = e.clientY - originalYPos;\n          mouseXpos = e.clientX;\n          appWidth = appNode.offsetWidth;\n\n          myGain.gain.value = mouseXpos/appWidth;\n          myOscillator.frequency.value = originalFrequency + distanceY;\n\n          appNode.style.backgroundSize = ((appWidth / scaleFrequencies.length)*2) + 'px 100%';\n\n        }, false); //mousemove\n\n      }, false); //mousedown\n\n      appNode.addEventListener('mouseup', function() {\n        myOscillator.stop();\n        appNode.removeEventListener('mousemove', null);\n      }, false); //mouseup\n\n}); // page loaded"]}